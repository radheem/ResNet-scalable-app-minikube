apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-app
  template:
    metadata:
      labels:
        app: worker-app
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '5000'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: worker-app
        image: worker-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /metrics
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            cpu: "1000m"
            memory: "1024Mi"
          limits:
            cpu: "2000m"
            memory: "2048Mi"
        env:
        - name: PORT
          value: "5000"
        - name: METRICS_PORT
          value: "8000"
        - name: DB_NAME
          value: "resnet18_db"
        - name: DB_USER
          value: "root"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: RABBITMQ_HOST        
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_QUEUE
          value: "requests_queue"
        - name: RABBITMQ_USERNAME
          value: "guest" 
        - name: RABBITMQ_PASSWORD
          value: "guest"  
---
apiVersion: v1
kind: Service
metadata:
  name: worker-app
spec:
  selector:
    app: worker-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP
